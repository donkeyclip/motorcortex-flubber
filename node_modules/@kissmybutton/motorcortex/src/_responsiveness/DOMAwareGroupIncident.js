const DOMAwareIncident = require('./DOMAwareIncident');


/**
 * This Class acts as the DOM Aware Incident for Groups (that take selector on props).
 *
 * The Class has a dynamic nature as it tries to apply
 * the exact same actions to all of its children. Some of its children might
 * accept the edits while others might not depending on the lanes and the Incidents
 * that exists at the time and that affect the elements belonging to the selector.
 */
class DOMAwareGroupIncident extends DOMAwareIncident {

    addIncident(incident, millisecond, sceneId, type = "all-or-nothing", autoGenerated = false) {
        this.originalIncident.addIncident(incident, millisecond, sceneId, type, autoGenerated);
        let result = { result: true, conflicts: [] };
        for (let i = 0; i < this.incidents.length; i++) {
            let subResult = this.incidents[i].incident.addIncident(incident, millisecond, sceneId, type, autoGenerated);
            if (subResult.result === false) {
                result.conflicts.push({
                    type: `conflicts on addition of Incident on plain group of element ${i}`,
                    meta: subResult.conflicts
                });
            }
        }
        return result;
    }

    editIncident(id, newmillisecond) {
        this.originalIncident.editIncident(id, newmillisecond);
        this._emptyIncidents();
        return this.flashDOM();
    }

    removeIncident(id, props = {}) {
        super.removeIncident(id, props);
        this._emptyIncidents();
        return this.flashDOM();
    }

    resizeIncident(incidentId, newDuration) {
        this.originalIncident.resizeIncident(incidentId, newDuration);
        this._emptyIncidents();
        return this.flashDOM();
    }

    editIncidentAttributes(incidentId, attrs) {
        this.originalIncident.editIncidentAttributes(incidentId, attrs);
        this._emptyIncidents();
        return this.flashDOM();
    }

    editIncidentDurationParams(incidentId, params) {
        this.originalIncident.editIncidentDurationParams(incidentId, params);
        this._emptyIncidents();
        return this.flashDOM();
    }
}

module.exports = DOMAwareGroupIncident;
