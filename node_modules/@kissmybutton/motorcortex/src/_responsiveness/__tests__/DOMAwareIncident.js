/*
In order to test DOMAwareIncident we need to pass a context that has the
following structure / methods:
context: {
    document: {
        querySelectorAll(selector) {
            return ['element1', 'element2', 'element3']
        }
    },
    getMCID(element) {
        return element;
    },
    getElementSelectorByMCID(mcid) {
        return `${mcid}-selector`;
    }
}
*/

const DOMAwareIncident = require('../DOMAwareIncident');
const DescriptiveIncident = require('../../_DescriptiveIncidents/DescriptiveIncident');
const mockContext = {
    rootElement: {
        querySelectorAll(selector) { // eslint-disable-line no-unused-vars
            return ['element1', 'element2', 'element3']
        }
    },
    getMCID(element) {
        return element;
    },
    getElementSelectorByMCID(mcid) {
        return `${mcid}-selector`;
    }
};

const contextData = {
    clipId: 'test-clip-id',
    context: mockContext
}

const di = new DescriptiveIncident({
    animatedAttrs: {
        alpha: 1.1,
        beta: 2.2
    }
}, {
    selector: 'my-test-selector'
});

const dai = new DOMAwareIncident(di, contextData);

test(`DOMAwareIncident should set up one AttributeAwareIncident on 0 position per element
        on construction time`, () => {
    expect(Object.keys(dai.children).length).toEqual(3);
    expect(Object.keys(dai.children)).toContain(`${di.id}_element1`);
    expect(Object.keys(dai.children)).toContain(`${di.id}_element2`);
    expect(Object.keys(dai.children)).toContain(`${di.id}_element3`);
    expect(dai.children[`${di.id}_element1`].position).toEqual(0);
    expect(dai.children[`${di.id}_element2`].position).toEqual(0);
    expect(dai.children[`${di.id}_element3`].position).toEqual(0);
    expect(dai.children[`${di.id}_element1`].id).toEqual(`${di.id}_element1`);
    expect(dai.children[`${di.id}_element2`].id).toEqual(`${di.id}_element2`);
    expect(dai.children[`${di.id}_element3`].id).toEqual(`${di.id}_element3`);
    expect(dai.children[`${di.id}_element1`].leaf.id).toEqual(`${di.id}_element1`);
    expect(dai.children[`${di.id}_element2`].leaf.id).toEqual(`${di.id}_element2`);
    expect(dai.children[`${di.id}_element3`].leaf.id).toEqual(`${di.id}_element3`);
});
