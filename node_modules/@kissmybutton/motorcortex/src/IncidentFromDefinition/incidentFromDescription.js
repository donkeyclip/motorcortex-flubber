const Group = require('../_BaseClasses/Group');
const DOMAwareIncident = require('../_responsiveness/DOMAwareIncident');
const DOMAwareClipIncident = require('../_responsiveness/DOMAwareClipIncident');
const incidentFromIngredients = require('./incidentFromIngredients');
const Channel = require('../_Channels/Channel');


function incidentFromDescription(descriptiveIncident, contextData) {
    /*
    RULES:
    - Groups can never have selectors
    - Clips can only have selectors (and not hosts) as they participate on a Desc. Tree
        and thus they are Clips As Incidents. The DescriptiveClips are treated a bit
        different compared to the rest of the Incidents as they copy all of the
        Description channels and lanes
    - Descriptive Incidents can either have or not have selectors
    - Descriptive Compos always have selectors

    All Incidents of the tree, no matter their type have the static properties:
    - Incident (which is the Incident class they need to initialise)
    - plugin_npm_name (the plugin name they bolong to)
    - Channel (the Channel class to handle the instance)
    */

    let incidentToReturn;

    if (descriptiveIncident.constructor.isClip === true) {
        incidentToReturn = new DOMAwareClipIncident(descriptiveIncident, contextData);
        // console.log(`incidentToReturn = ${incidentToReturn.constructor.name}`);
        incidentToReturn.plugin_channel_class = Channel;
    }
    else if (descriptiveIncident.constructor.Incident === Group) {
        incidentToReturn = incidentFromIngredients({
            id: descriptiveIncident.id,
            attrs: descriptiveIncident.attrs,
            props: descriptiveIncident.props,
            Incident: descriptiveIncident.constructor.Incident,
            plugin_npm_name: descriptiveIncident.constructor.plugin_npm_name,
            Channel: descriptiveIncident.constructor.Channel
        });

        for (let incId in descriptiveIncident.children) {
            const childIncident = incidentFromDescription(descriptiveIncident.children[incId].leaf, contextData);
            incidentToReturn.addChild(childIncident, descriptiveIncident.children[incId].position);
        }
    }
    else { // if it is an Incident that extends the TimeIncident (not a Group) then
        // we should anaylse it to its element/attribute Incidents starting from
        // the elements, that's why we create a DOMAwareIncident. It is our
        // starting point to which the TimedIncident will be analysed to its
        // element/attributes children.
        incidentToReturn = new DOMAwareIncident(descriptiveIncident, contextData);
    }

    return incidentToReturn;
}


module.exports = incidentFromDescription;
